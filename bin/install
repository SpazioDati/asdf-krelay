#!/usr/bin/env bash

set -e
set -o pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
[ -n "$ASDF_INSTALL_VERSION" ] || (echo >&2 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (echo >&2 'Missing ASDF_INSTALL_PATH' && exit 1)

install_krelay() {
  # local install_type=$1
  local version=$2
  local install_path=$3
  local bin_install_path="$install_path/bin"
  local source_path
  local download_url
  download_url="$(get_download_url "$version")"
  source_path="${bin_install_path}/$(basename "$download_url")"

  mkdir -p "${bin_install_path}"

  local bin_path="${bin_install_path}/kubectl-relay"
  echo "Downloading krelay from ${download_url}"

  if curl -L -sf "$download_url" --create-dirs -o "$source_path"; then
    tar zxf "${source_path}" -C "${bin_install_path}"
    chmod +x "${bin_path}"
    rm "${source_path}" "${bin_install_path}/README.md" "${bin_install_path}/LICENSE"
  else
    echo "Failed to download krelay from ${download_url}. Does the version exist and is available in the requested $(get_cpu) architecture?"
    exit 1
  fi
}

get_arch() {
  uname | tr '[:upper:]' '[:lower:]'
}

get_cpu() {
  local machine_hardware_name
  machine_hardware_name=${ASDF_KRELAY_OVERWRITE_ARCH:-"$(uname -m)"}

  case "$machine_hardware_name" in
    'x86_64') local cpu_type="amd64" ;;
    'aarch64') local cpu_type="arm64" ;;
    *) local cpu_type="$machine_hardware_name" ;;
  esac

  echo "$cpu_type"
}

get_download_url() {
  local version="$1"
  local platform
  platform="$(get_arch)"
  local cpu
  cpu=$(get_cpu)
  echo "https://github.com/knight42/krelay/releases/download/v${version}/kubectl-relay_v${version}_${platform}-${cpu}.tar.gz"
}

install_krelay "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
